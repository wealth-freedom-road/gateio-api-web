/*
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.gate.gateapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * CurrencyChain
 */
public class CurrencyChain {
    public static final String SERIALIZED_NAME_CHAIN = "chain";
    @SerializedName(SERIALIZED_NAME_CHAIN)
    private String chain;

    public static final String SERIALIZED_NAME_NAME_CN = "name_cn";
    @SerializedName(SERIALIZED_NAME_NAME_CN)
    private String nameCn;

    public static final String SERIALIZED_NAME_NAME_EN = "name_en";
    @SerializedName(SERIALIZED_NAME_NAME_EN)
    private String nameEn;

    public static final String SERIALIZED_NAME_IS_DISABLED = "is_disabled";
    @SerializedName(SERIALIZED_NAME_IS_DISABLED)
    private Integer isDisabled;


    public CurrencyChain chain(String chain) {
        
        this.chain = chain;
        return this;
    }

     /**
     * Chain name
     * @return chain
    **/
    @javax.annotation.Nullable
    public String getChain() {
        return chain;
    }


    public void setChain(String chain) {
        this.chain = chain;
    }

    public CurrencyChain nameCn(String nameCn) {
        
        this.nameCn = nameCn;
        return this;
    }

     /**
     * Chain name in Chinese
     * @return nameCn
    **/
    @javax.annotation.Nullable
    public String getNameCn() {
        return nameCn;
    }


    public void setNameCn(String nameCn) {
        this.nameCn = nameCn;
    }

    public CurrencyChain nameEn(String nameEn) {
        
        this.nameEn = nameEn;
        return this;
    }

     /**
     * Chain name in English
     * @return nameEn
    **/
    @javax.annotation.Nullable
    public String getNameEn() {
        return nameEn;
    }


    public void setNameEn(String nameEn) {
        this.nameEn = nameEn;
    }

    public CurrencyChain isDisabled(Integer isDisabled) {
        
        this.isDisabled = isDisabled;
        return this;
    }

     /**
     * If it is disabled. 0 means NOT being disabled
     * @return isDisabled
    **/
    @javax.annotation.Nullable
    public Integer getIsDisabled() {
        return isDisabled;
    }


    public void setIsDisabled(Integer isDisabled) {
        this.isDisabled = isDisabled;
    }
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CurrencyChain currencyChain = (CurrencyChain) o;
        return Objects.equals(this.chain, currencyChain.chain) &&
                Objects.equals(this.nameCn, currencyChain.nameCn) &&
                Objects.equals(this.nameEn, currencyChain.nameEn) &&
                Objects.equals(this.isDisabled, currencyChain.isDisabled);
    }

    @Override
    public int hashCode() {
        return Objects.hash(chain, nameCn, nameEn, isDisabled);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CurrencyChain {\n");
        sb.append("      chain: ").append(toIndentedString(chain)).append("\n");
        sb.append("      nameCn: ").append(toIndentedString(nameCn)).append("\n");
        sb.append("      nameEn: ").append(toIndentedString(nameEn)).append("\n");
        sb.append("      isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n        ");
    }

}

